vert:
uniform mat4 matrixProjInv
attribute position
attribute UV
output vec2 tc
void main()
{
	gl_Position = vec4(a_position, 0, 1);
	vs_out.tc = a_uv;
}

frag:
uniform int mode
uniform float rad
uniform float time
fragout vec4 fragColor
float rand2(vec2 v)
{
	return fract(cos(v.x * 12.9898 + v.y * 4.1414) * 43758.5453);
}

float rand2x(vec2 v)
{
	int x = int(v.x * 550);
	int y = int(v.y * 450);
	if((x / 50 + y / 50 * 11) % 2 == 0)
		return 1;
	return 0;
}

float noise2x(vec2 v)
{
	vec2 g = floor(v);
	v = smoothstep(vec2(0), vec2(1), fract(v));
	return mix(mix(rand2x(g), rand2x(g + vec2(1, 0)), v.x), mix(rand2x(g + vec2(0, 1)), rand2x(g + vec2(1, 1)), v.x), v.y);
}

float noise2(vec2 v)
{
	vec2 g = floor(v);
	v = smoothstep(vec2(0), vec2(1), fract(v));
	return mix(mix(rand2(g), rand2(g + vec2(1, 0)), v.x), mix(rand2(g + vec2(0, 1)), rand2(g + vec2(1, 1)), v.x), v.y);
}

float perlin2x(vec2 v)
{
	float t = 0, a = 0.5;
	for(int i = 0;i < 4; i++)
	{
		t += noise2x(v) * a;
		v += v;
		a *= 0.5;
	}
	return t;
}

float perlin2(vec2 v)
{
	float t = 0, a = 0.5;
	for(int i = 0;i < 4; i++)
	{
		t += noise2(v) * a;
		v += v;
		a *= 0.5;
	}
	return t;
}

float rand3(vec3 v)
{
	return fract(cos(v.x * 12.9898 + v.y * 4.1414 + v.z * 6.4718) * 43758.5453);
}

float noise3(vec3 v)
{
	vec3 g = floor(v);
	v = smoothstep(vec3(0), vec3(1), fract(v));
	return mix(mix(mix(rand3(g + vec3(0, 0, 0)), rand3(g + vec3(1, 0, 0)), v.x),
	mix(rand3(g + vec3(0, 1, 0)), rand3(g + vec3(1, 1, 0)), v.x), v.y),
	mix(mix(rand3(g + vec3(0, 0, 1)), rand3(g + vec3(1, 0, 1)), v.x),
	mix(rand3(g + vec3(0, 1, 1)), rand3(g + vec3(1, 1, 1)), v.x), v.y), v.z);
}

float perlin3(vec3 v)
{
	float t = 0, a = 0.5;
	for(int i = 0;i < 4;i++)
	{
		t += noise3(v) * a;
		v += v;
		a *= 0.5;
	}
	return t;
}

void main()
{
	if(u_mode == 0)
		o_fragColor = vec4(vec3(perlin3(vec3(fs_in.tc * u_rad, u_time * 0.01))), 1);
	else
		o_fragColor = vec4(perlin2(fs_in.tc * u_rad + u_time * 0.01), perlin2(fs_in.tc * 2 * u_rad - u_time * 0.01), perlin2(fs_in.tc * 3 * u_rad + u_time * 0.01), 1);
}